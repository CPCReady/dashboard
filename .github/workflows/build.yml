name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # ðŸ”¹ Linux x86_64
          - os: ubuntu-x86_64
            runner: ubuntu-latest
            arch: x86_64

          # ðŸ”¹ Linux ARM64 (cross-compilaciÃ³n)
          - os: ubuntu-arm64
            runner: ubuntu-latest
            arch: aarch64

          # ðŸ”¹ macOS ARM (Apple Silicon)
          - os: macos-14
            runner: macos-14
            arch: arm64

          # ðŸ”¹ macOS Intel
          - os: macos-13
            runner: macos-13
            arch: x86_64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo apt-get update
          if [[ "${{ matrix.arch }}" == "aarch64" ]]; then
            # Cross toolchain para ARM64
            sudo apt-get install -y build-essential cmake pkg-config libyaml-cpp-dev \
                                    gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          else
            sudo apt-get install -y build-essential cmake pkg-config libyaml-cpp-dev
          fi
        elif [[ "$RUNNER_OS" == "macOS" && "${{ matrix.os }}" == "macos-13" ]]; then
          brew update
          brew install cmake pkg-config yaml-cpp
        elif [[ "$RUNNER_OS" == "macOS" && "${{ matrix.os }}" == "macos-14" ]]; then
          brew update
          brew install cmake pkg-config
          git clone https://github.com/jbeder/yaml-cpp.git
          cd yaml-cpp
          mkdir build && cd build
          cmake .. -DYAML_BUILD_SHARED_LIBS=ON
          make -j"$(sysctl -n hw.ncpu)"
          sudo make install
        fi

    - name: Clone and Install FTXUI
      run: |
        git clone https://github.com/ArthurSonzogni/FTXUI.git /tmp/FTXUI
        cd /tmp/FTXUI
        mkdir build && cd build
        cmake ..
        sudo make install || make install

    - name: Configure and Build Project
      run: |
        mkdir build
        cd build
        cmake ..
        make

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dashboard-${{ matrix.os }}
        path: build/dashboard