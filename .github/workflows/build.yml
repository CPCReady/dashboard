name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux x86_64
            os: ubuntu-latest
            arch: x86_64
            artifact_name: dashboard-linux-x86_64

          - name: macOS Intel
            os: macos-13
            arch: x86_64
            artifact_name: dashboard-macos-x86_64

          - name: macOS ARM
            os: macos-14
            arch: arm64
            artifact_name: dashboard-macos-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake pkg-config libyaml-cpp-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install yaml-cpp pkg-config

      - name: Clone and Build FTXUI
        run: |
          git clone https://github.com/ArthurSonzogni/FTXUI.git /tmp/FTXUI
          cd /tmp/FTXUI
          mkdir build && cd build
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            cmake .. -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}
          else
            cmake ..
          fi
          make

      - name: Configure and Build Project
        run: |
          mkdir build
          cd build
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            cmake .. -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} -DCMAKE_PREFIX_PATH=/tmp/FTXUI
          else
            cmake .. -DCMAKE_PREFIX_PATH=/tmp/FTXUI
          fi
          make

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: build/dashboard

  build-linux-arm64:
    name: Build for Linux (ARM64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build for arm64 via emulation
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: arm64
          distro: jammy
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          run: |
            # 1. Install dependencies inside the ARM container
            apt-get update
            apt-get install -y build-essential cmake pkg-config libyaml-cpp-dev git

            # 2. Build and install FTXUI for ARM
            git clone https://github.com/ArthurSonzogni/FTXUI.git /tmp/FTXUI
            cd /tmp/FTXUI
            mkdir build && cd build
            cmake ..
            make install

            # 3. Build the project inside the ARM container
            cd /github/workspace
            mkdir build
            cd build
            cmake ..
            make

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-linux-arm64
          path: build/dashboard